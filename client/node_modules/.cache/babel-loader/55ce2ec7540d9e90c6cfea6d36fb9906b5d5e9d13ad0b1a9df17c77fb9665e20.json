{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Code/Repos/csgo-trading-app-v2/client/src/pages/Offers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { IncomingOffers, OutgoingOffers } from \"../components/offers/Offer\";\nimport { getUserId, currentTime } from \"../utilities/Utilities\";\nimport '../styles/pages/Offers.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Offers() {\n  _s();\n  const [offerData, setOfferData] = useState({\n    tradeOffers: [],\n    associatedTrades: []\n  });\n  const auth_token = sessionStorage.getItem('auth_token');\n  useEffect(() => {\n    if (!auth_token) {\n      return;\n    }\n    const userId = getUserId(auth_token);\n    fetch(`http://localhost:4000/offers/all/${userId}`).then(response => response.json()).then(newData => {\n      // Update the offerData state with the new data\n      setOfferData(newData);\n    }).catch(error => console.error('Error fetching data:', error));\n  });\n\n  // Function to update the offer status and fetch updated data\n  const handleDeclineOffer = offerId => {\n    // Make a network request to update the offer status in the database\n    fetch(`http://localhost:4000/offers/update/${offerId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': auth_token\n      },\n      body: JSON.stringify({\n        status: \"declined\"\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Response error encountered.');\n      }\n      // After successfully updating the status, fetch the updated data\n      return fetch(`http://localhost:4000/offers/all/${getUserId(auth_token)}`);\n    }).then(response => response.json()).then(newData => {\n      // Update the offerData state with the updated data\n      setOfferData(newData);\n    }).catch(error => {\n      console.error(\"Error: \", error);\n    });\n  };\n  const handleAcceptOffer = async (tradeId, offerId) => {\n    try {\n      const tradeResponse = await fetch(`http://localhost:4000/api/trades/${tradeId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': auth_token\n        },\n        body: JSON.stringify({\n          acceptedOffer: offerId,\n          tradeStatus: \"inactive\"\n        })\n      });\n      if (!tradeResponse.ok) {\n        throw new Error('Trade update request failed.');\n      }\n      const offerResponse = await fetch(`http://localhost:4000/offers/update/${offerId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': auth_token\n        },\n        body: JSON.stringify({\n          status: \"accepted\",\n          acceptedAt: currentTime()\n        })\n      });\n      if (!offerResponse.ok) {\n        throw new Error('Offer update request failed.');\n      }\n\n      // Fetch updated offer data and set it in your state\n      const newDataResponse = await fetch(`http://localhost:4000/offers/all/${getUserId(auth_token)}`);\n      if (!newDataResponse.ok) {\n        throw new Error('Fetching updated offer data failed.');\n      }\n      const newData = await newDataResponse.json();\n      setOfferData(newData);\n    } catch (error) {\n      console.error(\"Error: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"offer-grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incoming-tab\",\n      children: /*#__PURE__*/_jsxDEV(IncomingOffers, {\n        data: offerData.tradeOffers,\n        onDeclineOffer: handleDeclineOffer,\n        onAcceptOffer: handleAcceptOffer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outgoing-tab\",\n      children: /*#__PURE__*/_jsxDEV(OutgoingOffers, {\n        data: offerData.associatedTrades\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Offers, \"cxy78CJ9rMFPOj/Yb9sIMAAS3zw=\");\n_c = Offers;\nvar _c;\n$RefreshReg$(_c, \"Offers\");","map":{"version":3,"names":["React","useState","useEffect","IncomingOffers","OutgoingOffers","getUserId","currentTime","jsxDEV","_jsxDEV","Offers","_s","offerData","setOfferData","tradeOffers","associatedTrades","auth_token","sessionStorage","getItem","userId","fetch","then","response","json","newData","catch","error","console","handleDeclineOffer","offerId","method","headers","body","JSON","stringify","status","ok","Error","handleAcceptOffer","tradeId","tradeResponse","acceptedOffer","tradeStatus","offerResponse","acceptedAt","newDataResponse","className","children","data","onDeclineOffer","onAcceptOffer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevin/Code/Repos/csgo-trading-app-v2/client/src/pages/Offers.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { IncomingOffers, OutgoingOffers} from \"../components/offers/Offer\";\nimport { getUserId, currentTime } from \"../utilities/Utilities\";\nimport '../styles/pages/Offers.css';\n\nexport default function Offers() {\n    const [offerData, setOfferData] = useState({\n        tradeOffers: [],\n        associatedTrades: [],\n    });\n\n    const auth_token = sessionStorage.getItem('auth_token');\n\n    useEffect(() => {\n\n        if (!auth_token) {\n            return;\n        }\n\n        const userId = getUserId(auth_token);\n\n        fetch(`http://localhost:4000/offers/all/${userId}`)\n            .then((response) => response.json())\n            .then((newData) => {\n                // Update the offerData state with the new data\n                setOfferData(newData);\n            })\n            .catch((error) => console.error('Error fetching data:', error));\n    }, );\n\n    // Function to update the offer status and fetch updated data\n    const handleDeclineOffer = (offerId) => {\n        // Make a network request to update the offer status in the database\n        fetch(`http://localhost:4000/offers/update/${offerId}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': auth_token\n            },\n            body: JSON.stringify({\n                status: \"declined\"\n            })\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Response error encountered.');\n                }\n                // After successfully updating the status, fetch the updated data\n                return fetch(`http://localhost:4000/offers/all/${getUserId(auth_token)}`);\n            })\n            .then((response) => response.json())\n            .then((newData) => {\n                // Update the offerData state with the updated data\n                setOfferData(newData);\n            })\n            .catch((error) => {\n                console.error(\"Error: \", error);\n            });\n    };\n\n    const handleAcceptOffer = async(tradeId, offerId) => {\n        try {\n            const tradeResponse = await fetch(`http://localhost:4000/api/trades/${tradeId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type' : 'application/json',\n                    'auth-token': auth_token\n                },\n                body: JSON.stringify({\n                    acceptedOffer: offerId,\n                    tradeStatus: \"inactive\"\n                })\n            });\n\n            if(!tradeResponse.ok) {\n                throw new Error('Trade update request failed.');\n            }\n\n            const offerResponse = await fetch(`http://localhost:4000/offers/update/${offerId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'auth-token': auth_token\n                },\n                body: JSON.stringify({\n                    status: \"accepted\",\n                    acceptedAt: currentTime()\n                })\n            });\n\n            if(!offerResponse.ok) {\n                throw new Error('Offer update request failed.');\n            }\n\n            // Fetch updated offer data and set it in your state\n            const newDataResponse = await fetch(`http://localhost:4000/offers/all/${getUserId(auth_token)}`);\n            if (!newDataResponse.ok) {\n                throw new Error('Fetching updated offer data failed.');\n            }\n\n            const newData = await newDataResponse.json();\n            setOfferData(newData);\n        } catch (error) {\n            console.error(\"Error: \", error);\n        }\n    };\n\n    return (\n        <div className=\"offer-grid-container\">\n            <div className=\"incoming-tab\">\n                {/* Pass the offerData state and the decline handler to IncomingOffers */}\n                <IncomingOffers data={offerData.tradeOffers} onDeclineOffer={handleDeclineOffer} onAcceptOffer={handleAcceptOffer} />\n            </div>\n\n            <div className=\"outgoing-tab\">\n                <OutgoingOffers data={offerData.associatedTrades} />\n            </div>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}