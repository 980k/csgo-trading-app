{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Code/Repos/csgo-trading-app-v2/client/src/components/index/Trades.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { convertWear } from \"../../utilities/Utilities\";\nimport '../../styles/components/Trades.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Trades({\n  data\n}) {\n  const gridItems = data.map((trade, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-grid-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trade-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"[H]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 22\n        }, this), \"ave\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: trade.have.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.knife, \" | \", item.finish, \" (\", convertWear(item.wear), \")\"]\n        }, itemIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"[W]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 22\n        }, this), \"ant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: trade.want.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.knife, \" | \", item.finish, \" (\", convertWear(item.wear), \")\"]\n        }, itemIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), trade.status === \"active\" ? /*#__PURE__*/_jsxDEV(NavLink, {\n      to: `/offers/${trade._id}`,\n      className: \"navlink-offer-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offerBtn\",\n        children: \"Make Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this)\n    }, trade._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"completed\",\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this)]\n  }, trade._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trade-grid-container\",\n    children: gridItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = Trades;\nvar _c;\n$RefreshReg$(_c, \"Trades\");","map":{"version":3,"names":["React","NavLink","convertWear","jsxDEV","_jsxDEV","Trades","data","gridItems","map","trade","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","have","item","itemIndex","knife","finish","wear","want","status","to","_id","_c","$RefreshReg$"],"sources":["/Users/kevin/Code/Repos/csgo-trading-app-v2/client/src/components/index/Trades.jsx"],"sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { convertWear } from \"../../utilities/Utilities\";\nimport '../../styles/components/Trades.css';\n\nexport default function Trades({ data }) {\n\n    const gridItems = data.map((trade, index) => (\n        <div key={trade._id} className=\"trade-grid-item\">\n\n            <div className=\"trade-list\">\n                <div><b>[H]</b>ave</div>\n                <ul>\n                    {trade.have.map((item, itemIndex) => (\n                        <li key={itemIndex}>\n                            {item.knife} | {item.finish} ({convertWear(item.wear)})\n                        </li>\n                    ))}\n                </ul>\n\n                <div><b>[W]</b>ant</div>\n                <ul>\n                    {trade.want.map((item, itemIndex) => (\n                        <li key={itemIndex}>\n                            {item.knife} | {item.finish} ({convertWear(item.wear)})\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            {\n                (trade.status === \"active\") ?\n                    (\n                        <NavLink to={`/offers/${trade._id}`} key={trade._id} className=\"navlink-offer-btn\">\n                            <div className=\"offerBtn\">Make Offer</div>\n                        </NavLink>\n                    ) :\n                    (<div className=\"completed\">Completed</div>)\n            }\n\n            {/*<NavLink to={`/offers/${trade._id}`} key={trade._id} className=\"navlink-offer-btn\">*/}\n            {/*    <div className=\"offerBtn\">Make Offer</div>*/}\n            {/*</NavLink>*/}\n        </div>\n    ));\n\n    return (\n        <div className=\"trade-grid-container\">\n            {gridItems}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}